_BASE_: "../Base-RCNN-FPN.yaml"
MODEL:
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-50.pkl"
  #WEIGHTS: "/workspace/jlazarow/detection/train/coco_2017_train/COCO-InstanceSegmentation/boundaryformer_rcnn_R_50_FPN_1x.yaml/COMMENT#test_all_001_no_detach+MODEL.DIFFRAS.INV_SMOOTHNESS_SCHED#(0.01,)/model_final.pth"
  MASK_ON: True
  ROI_HEADS:
    NUM_CLASSES: 8
  ROI_MASK_HEAD:
    NAME: "BoundaryFormerPolygonHead"
    POOLER_TYPE: ""
  BOUNDARY_HEAD:
    IN_FEATURES: ["p2", "p3", "p4", "p5"]
    PRED_WITHIN_BOX: True
    POLY_NUM_PTS: 64
    CLS_AGNOSTIC_MASK: True
  DIFFRAS:
    RESOLUTIONS: (64, 64, 64, 64, 64, 64, 64, 64)
    USE_RASTERIZED_GT: False
    INV_SMOOTHNESS_SCHED: (0.1,)
  RESNETS:
    DEPTH: 50
# This is similar to the setting used in Mask R-CNN paper, Appendix A
# But there are some differences, e.g., we did not initialize the output
# layer using the corresponding classes from COCO
INPUT:
  MIN_SIZE_TRAIN: (800, 832, 864, 896, 928, 960, 992, 1024)
  MIN_SIZE_TRAIN_SAMPLING: "choice"
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TRAIN: 2048
  MAX_SIZE_TEST: 2048
DATASETS:
  TRAIN: ("cityscapes_fine_instance_seg_train",)
  TEST: ("cityscapes_fine_instance_seg_val",)
SOLVER:
  OPTIMIZER: "ADAM"
  BASE_LR: 1e-4
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: 0.0
  WEIGHT_DECAY_NORM: 0.0
  STEPS: (18000,)
  MAX_ITER: 24000
  IMS_PER_BATCH: 8
  CHECKPOINT_PERIOD: 8000
TEST:
  EVAL_PERIOD: 0
